name: "🛰️ 智能源码监控系统"

env:
  监控仓库地址: https://github.com/coolsnowwolf/lede
  监控分支: master
  目标工作流列表: "LEDE-MangoPi_M28C-Builder.yml"  # 改为实际的工作流文件名

on:
  workflow_dispatch:
  schedule:
    - cron: '0 20 * * *'  # UTC时间20:00(北京时间04:00)

jobs:
  仓库更新监控:
    name: "🛡️ [主控单元] 仓库更新监控"
    runs-on: ubuntu-latest

    steps:
      # ----------------------- 系统初始化伪装 -----------------------
      - name: "🚀 启动系统"
        run: |
          echo "╔══════════════════════════════════════════════╗"
          echo "║                                              ║"
          echo "║        仓库监控系统 初始化中...              ║"
          echo "║       $(date +'%Y-%m-%d %H:%M:%S')              ║"
          echo "║                                              ║"
          echo "╚══════════════════════════════════════════════╝"
          echo "▷ 正在加载核心模块..."
          sleep 0.5
          echo "✔ 虚拟环境已就绪"
          sleep 0.3

      # ----------------------- 实际工作流程 -----------------------
      - name: "🔍 指纹扫描"
        id: scan
        run: |
          echo "┌──────────────────────────────────────────────┐"
          echo "│ 正在分析目标仓库：${{ env.监控仓库地址 }}    │"
          echo "└──────────────────────────────────────────────┘"
          git clone --depth 1 ${{ env.监控仓库地址 }} -b ${{ env.监控分支 }} .
          当前哈希=$(git rev-parse HEAD)
          echo "├──────────────────────────────────────────────┤"
          echo "│ 最新提交哈希: ${当前哈希:0:7}...${当前哈希: -7} │"
          echo "└──────────────────────────────────────────────┘"
          echo "commitHash=$当前哈希" >> $GITHUB_OUTPUT

      - name: "📊 指纹比对"
        id: cache_check
        uses: actions/cache@v3
        with:
          path: .commitHash
          key: commitHash_${{ steps.scan.outputs.commitHash }}

      - name: "논 保存新指纹数据"
        if: steps.cache_check.outputs.cache-hit != 'true'
        run: |
          echo "┌──────────────────────────────────────────────┐"
          echo "│ 刷新指纹数据中...                             │"
          echo "└──────────────────────────────────────────────┘"
          echo "${{ steps.scan.outputs.commitHash }}" | tee .commitHash
          echo "✅ 指纹数据已更新"

      - name: "🔔 触发协同工作流"
        if: always()
        run: |
          echo "╔══════════════════════════════════════════════╗"
          echo "║  调度中心接到指令，正在分发任务...         ║"
          echo "║  目标工作流: ${{ env.目标工作流列表 }}     ║"
          echo "╚══════════════════════════════════════════════╝"

          IFS=',' read -ra 工作流数组 <<< "${{ env.目标工作流列表 }}"
          for 工作流 in "${工作流数组[@]}"; do
            工作流=$(echo $工作流 | xargs)
            echo "⚡ 正在触发工作流: $工作流"
            curl -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/actions/workflows/$工作流/dispatches" \
              -d '{"ref":"master","inputs":{"force_build":"${{ github.event_name == '\''schedule'\'' }}"}}'
            sleep 1  # 避免触发频率过高
          done

      - name: "🧹 清理日志"
        if: always()
        uses: Mattraks/delete-workflow-runs@v2
        with:
          retain_days: 0
          keep_minimum_runs: 3
