name: "智能更新"

env:
  监控仓库地址: https://github.com/coolsnowwolf/lede
  监控分支: master
  目标工作流列表: "LEDE-MangoPi_M28C-Builder"  # 多个工作流用逗号分隔

on:
  workflow_dispatch:
  schedule:
    - cron: '0 20 * * *'  # UTC时间20:00(北京时间04:00)

jobs:
  更新检查:
    runs-on: ubuntu-latest

    steps:
      - name: "🚀 初始化监控系统"
        run: |
          echo "#############################################"
          echo "#                                           #"
          echo "#       智能仓库监控系统 启动中...           #"
          echo "#  $(date +'%Y-%m-%d %H:%M:%S')               #"
          echo "#                                           #"
          echo "#############################################"

      - name: "🔍 获取源码最新指纹"
        id: 获取哈希
        run: |
          echo "▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄"
          echo "█ 正在克隆仓库并提取提交哈希..."
          git clone --depth 1 $监控仓库地址 -b $监控分支 .
          当前哈希=$(git rev-parse HEAD)
          echo "█ 最新提交哈希: ${当前哈希:0:7}...${当前哈希: -7}"
          echo "▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀"
          echo "commitHash=$当前哈希" >> $GITHUB_OUTPUT

      - name: "📊 比对仓库历史记录"
        id: 缓存比对
        uses: actions/cache@v3
        with:
          path: .commitHash
          key: commitHash_${{ steps.获取哈希.outputs.commitHash }}

      - name: "💾 保存新指纹数据"
        if: steps.缓存比对.outputs.cache-hit != 'true'
        run: |
          echo "🆕 检测到仓库更新！正在记录新指纹..."
          echo ${{ steps.获取哈希.outputs.commitHash }} | tee .commitHash
          echo "✅ 指纹数据已存入安全存储区"

      - name: "🔔 触发协同工作流"
        if: always()
        run: |
          echo "████████████████████████████████████████████"
          echo "█  调度中心接到指令，正在分发任务...         █"
          echo "█  目标工作流: ${{ env.目标工作流列表 }}     █"
          echo "████████████████████████████████████████████"
          
          IFS=',' read -ra 工作流数组 <<< "$目标工作流列表"
          for 工作流 in "${工作流数组[@]}"; do
            工作流=$(echo $工作流 | xargs)  # 去除前后空格
            echo "⚡ 正在触发工作流: $工作流"
            curl -X POST \
              -H "Authorization: token ${{ github.token }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/actions/workflows/$工作流/dispatches \
              -d '{"ref":"${{ github.ref }}","inputs":{"force_build":"${{ github.event_name == 'schedule' }}"}}'
            echo "✔ 已发送触发信号"
          done

      - name: "🧹 清理系统日志"
        if: always()
        uses: Mattraks/delete-workflow-runs@v2
        with:
          retain_days: 0
          keep_minimum_runs: 3
