name: "LEDE Update Checker"

env:
  MONITOR_REPO_URL: https://github.com/coolsnowwolf/lede
  MONITOR_BRANCH: master
  TARGET_WORKFLOWS: "LEDE-MangoPi_M28C-Builder.yml"  # Change to your actual workflow file name

on:
  workflow_dispatch:
  schedule:
    - cron: '0 20 * * *'  # 20:00 UTC (04:00 Beijing time)

jobs:
  monitor_repo:
    name: "Main Unit: Monitor Repo"
    runs-on: ubuntu-latest

    steps:
      # ----------------------- System Initialization -----------------------
      - name: "Launch System"
        run: |
          echo "==========================================="
          echo "          LEDE Update Checker Initializing..."
          echo "          $(date +'%Y-%m-%d %H:%M:%S')"
          echo "==========================================="
          echo ">> Loading core modules..."
          sleep 0.5
          echo ">> Virtual environment ready"
          sleep 0.3

      # ----------------------- Actual Workflow -----------------------
      - name: "Fingerprint Scan"
        id: scan
        run: |
          echo "==========================================="
          echo "Analyzing target repository: ${{ env.MONITOR_REPO_URL }}"
          echo "==========================================="
          git clone --depth 1 ${{ env.MONITOR_REPO_URL }} -b ${{ env.MONITOR_BRANCH }} .
          current_hash=$(git rev-parse HEAD)
          echo "==========================================="
          echo "Latest commit hash: ${current_hash:0:7}...${current_hash: -7}"
          echo "==========================================="
          echo "commitHash=$current_hash" >> $GITHUB_OUTPUT

      - name: "Fingerprint Comparison"
        id: cache_check
        uses: actions/cache@v3
        with:
          path: .commitHash
          key: commitHash_${{ steps.scan.outputs.commitHash }}

      - name: "Save New Fingerprint Data"
        if: steps.cache_check.outputs.cache-hit != 'true'
        run: |
          echo "==========================================="
          echo "Updating fingerprint data..."
          echo "==========================================="
          echo "${{ steps.scan.outputs.commitHash }}" | tee .commitHash
          echo "Fingerprint data updated successfully"

      - name: "Trigger Associated Workflows"
        if: always()
        run: |
          echo "==========================================="
          echo "Dispatch center received instruction, dispatching tasks..."
          echo "Target workflows: ${{ env.TARGET_WORKFLOWS }}"
          echo "==========================================="

          IFS=',' read -ra workflow_array <<< "${{ env.TARGET_WORKFLOWS }}"
          for workflow in "${workflow_array[@]}"; do
            workflow=$(echo $workflow | xargs)
            echo "Triggering workflow: $workflow"
            event_name=$(echo ${{ github.event_name }} | xargs)
            curl -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/actions/workflows/$workflow/dispatches" \
              -d '{"ref":"master","inputs":{"force_build":"'${{ event_name == 'schedule' }}"'}}'
            sleep 1  # Avoid high trigger frequency
          done

      - name: "Clean Up Logs"
        if: always()
        uses: Mattraks/delete-workflow-runs@v2
        with:
          retain_days: 0
          keep_minimum_runs: 3
