name: LEDE-HinLink_H29K-Builder  # ✅ 工作流显示名称在此处定义

on:
  # ▼▼▼ 保持原有触发条件 ▼▼▼
  repository_dispatch: {}
  workflow_dispatch: {}

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds_config/LEDE/HinLink_H29K/feeds.conf.default
  CONFIG_FILE: config/LEDE/HinLink_H29K/.config
  DIY_P1_SH: DIY_Script/LEDE/HinLink_H29K/diy-part1.sh
  DIY_P2_SH: DIY_Script/LEDE/HinLink_H29K/diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      # ▼▼▼ 步骤名称去除了 ANSI 转义 ▼▼▼
      - name: "✅ 1/10 仓库校验"
        uses: actions/checkout@v4
        shell: bash
        run: |
          printf "\033[1;32m[校验] 正在检查仓库状态...\033[0m\n"
          git status

      - name: "✨ 2/10 初始化环境"
        shell: bash
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          printf "\033[1;35m[环境] 安装依赖 (详细日志模式)\033[0m\n"
          # ▼▼▼ 保持原始清理和安装命令 ▼▼▼
          sudo rm -rf /etc/apt/sources.list.d/* \
            /usr/share/dotnet \
            /usr/local/lib/android \
            /opt/ghc \
            /opt/hostedtoolcache/CodeQL
          sudo docker image prune -af
          sudo apt-get -qq update
          sudo apt-get -qq install -y \
            ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
            bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext \
            gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 \
            libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev \
            libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev \
            libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch \
            pkgconf python2.7 python3 python3-pyelftools qemu-utils rsync scons \
            squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget \
            xmlto xxd zlib1g-dev
          printf "\033[1;32m[环境] 依赖安装完成！当前时间: $(date)\033[0m\n"

      - name: "📊 3/10 硬件检测"
        shell: bash
        run: |
          # ▼▼▼ 保留原始颜色输出但仅作用于日志 ▼▼▼
          printf "\033[1;31m[警告] 高性能服务器可提升编译速度！\033[0m\n"
          printf "\033[1;36m▬▬ CPU ▬▶ \033[0m$(lscpu | grep 'Model name' | cut -d':' -f2)\n"
          printf "\033[1;36m▬▬ 内存 ▬▶ \033[0m$(free -h | awk '/Mem:/ {print $2}')\n"

      - name: "📥 4/10 克隆源码"
        working-directory: /workdir
        shell: bash
        run: |
          printf "\033[1;35m[源码] 克隆仓库到 /workdir/lede ...\033[0m\n"
          git clone --depth 1 $REPO_URL -b $REPO_BRANCH lede
          ln -sf /workdir/lede $GITHUB_WORKSPACE/lede

      # ▼▼▼ 后续步骤保持相同修复模式 ▼▼▼
      - name: "⚡ 5/10 加载订阅源"
        shell: bash
        run: |
          printf "\033[1;35m[订阅] 加载 feeds.conf 配置文件\033[0m\n"
          [ -f "$FEEDS_CONF" ] && cp -v "$FEEDS_CONF" lede/feeds.conf.default
          chmod +x "$DIY_P1_SH"
          cd lede && "$GITHUB_WORKSPACE/$DIY_P1_SH"

      - name: "🔄 6/10 更新订阅源"
        shell: bash
        run: |
          printf "\033[1;35m[订阅] 更新 feeds...\033[0m\n"
          cd lede && ./scripts/feeds update -a

      - name: "📦 7/10 安装订阅源"
        shell: bash
        run: |
          printf "\033[1;35m[订阅] 安装 feeds 软件包\033[0m\n"
          cd lede && ./scripts/feeds install -a

      - name: "🔧 8/10 加载配置"
        shell: bash
        run: |
          printf "\033[1;35m[配置] 应用预设文件 $CONFIG_FILE\033[0m\n"
          [ -f "$CONFIG_FILE" ] && cp -v "$CONFIG_FILE" lede/.config
          chmod +x "$DIY_P2_SH"
          cd lede && "$GITHUB_WORKSPACE/$DIY_P2_SH"

      - name: "🔨 9/10 编译固件"
        shell: bash
        run: |
          printf "\033[1;35m[编译] 启动多线程编译 (CPU 核心数: $(nproc))\033[0m\n"
          cd lede
          make -j$(nproc) || { 
            printf "\033[1;31m[错误] 并行编译失败，切换到单线程模式！\033[0m\n"
            make -j1 V=s
          }

      - name: "🚀 10/10 上传固件"
        if: ${{ success() && env.UPLOAD_FIRMWARE == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: H29K-Bin-$(date +'%Y%m%d')
          path: lede/bin/targets/**/*.bin
